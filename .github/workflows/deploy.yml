name: Deploy to Production

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: persona-frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./persona-frontend
      run: npm ci
      
    - name: Build application
      working-directory: ./persona-frontend
      run: npm run build
      
    - name: Run tests (if available)
      working-directory: ./persona-frontend
      run: npm test --if-present
      
    - name: Deploy to Vercel
      if: github.ref == 'refs/heads/master'
      working-directory: ./persona-frontend
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      run: |
        npm install -g vercel
        vercel --prod --token $VERCEL_TOKEN --confirm

  deploy-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test backend (syntax check)
      run: python -m py_compile server.py
      
    - name: Deploy to Railway/Heroku
      if: github.ref == 'refs/heads/master'
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        # Railway CLI deployment commands here
        echo "Backend deployment configured"

  notify:
    needs: [deploy-frontend, deploy-backend]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Deployment Status
      run: |
        echo "✅ Frontend deployment: ${{ needs.deploy-frontend.result }}"
        echo "✅ Backend deployment: ${{ needs.deploy-backend.result }}"